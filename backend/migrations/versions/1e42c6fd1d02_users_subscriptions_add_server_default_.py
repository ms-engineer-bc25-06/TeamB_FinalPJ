"""users/subscriptions: add server_default(now); add unique on subscriptions.user_id

Revision ID: 1e42c6fd1d02
Revises: fdc7e3718216
Create Date: 2025-08-10 13:19:47.948489

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1e42c6fd1d02'
down_revision: Union[str, Sequence[str], None] = 'fdc7e3718216'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # 既存の NULL を埋めて NOT NULL 違反を防ぐ（保険）
    op.execute(sa.text("UPDATE users SET updated_at = NOW() WHERE updated_at IS NULL"))
    op.execute(sa.text("UPDATE subscriptions SET updated_at = NOW() WHERE updated_at IS NULL"))

    # server_default を付与
    op.alter_column(
        "users", "updated_at",
        existing_type=sa.DateTime(timezone=True),
        server_default=sa.text("NOW()"),
        existing_nullable=False,
    )
    op.alter_column(
        "subscriptions", "updated_at",
        existing_type=sa.DateTime(timezone=True),
        server_default=sa.text("NOW()"),
        existing_nullable=False,
    )

    # subscriptions.user_id に UNIQUE 制約を追加
    op.create_unique_constraint(
        "uq_subscriptions_user_id", "subscriptions", ["user_id"]
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # UNIQUE 制約を外す
    op.drop_constraint("uq_subscriptions_user_id", "subscriptions", type_="unique")

    # server_default を外す
    op.alter_column(
        "subscriptions", "updated_at",
        existing_type=sa.DateTime(timezone=True),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "users", "updated_at",
        existing_type=sa.DateTime(timezone=True),
        server_default=None,
        existing_nullable=False,
    )
    # ### end Alembic commands ###
